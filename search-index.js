var searchIndex = new Map(JSON.parse('[\
["lib",{"t":"QQCQQQCCCHHHCCCKHHMHHHHHHKKCMMMKYPPPKYGKYKYFNNNNNNNNNNMNNNMNNNNNNNNNNNNNNNNNNNNNNNNHNHHHNHHHHHNMNNNNNNNNNNNNN","n":["deb","i0","math","out","srt","unzip","util","divisors","gcd","divisors","gcd","lcm","io","other","vec","OutFormatter","Possible","Yes","out_format","possible","yes","chmax","chmin","nz","one","Comparator","Decrement","cmp","decrement","greater","smaller","Eq","Eq","Equal","Greater","Less","Ord","Ord","Ordering","PartialEq","PartialEq","PartialOrd","PartialOrd","Reverse","borrow","borrow","borrow_mut","borrow_mut","clamp","clone","clone","clone_from","clone_into","clone_into","cmp","cmp","cmp","default","eq","eq","eq","fmt","fmt","from","from","ge","ge","gt","gt","hash","hash","into","into","is_eq","is_ge","is_gt","is_le","is_lt","is_ne","le","le","lt","lt","max","max","max_by","max_by_key","min","min","min_by","min_by_key","minmax","minmax_by","minmax_by_key","ne","partial_cmp","partial_cmp","partial_cmp","reverse","then","then_with","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id"],"q":[[0,"lib"],[7,"lib::math"],[9,"lib::math::divisors"],[10,"lib::math::gcd"],[12,"lib::util"],[15,"lib::util::io"],[21,"lib::util::other"],[25,"lib::util::vec"],[31,"lib::util::vec::cmp"],[109,"std::collections::hash::set"],[110,"alloc::string"],[111,"core::cmp"],[112,"core::convert"],[113,"core::ops::function"],[114,"core::clone"],[115,"core::default"],[116,"core::marker"],[117,"core::fmt"],[118,"core::result"],[119,"core::hash"],[120,"core::option"],[121,"core::any"],[122,"core"]],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,13,14,14,0,0,18,18,18,0,0,0,0,0,0,0,0,18,19,18,19,17,18,19,19,18,19,17,18,19,19,10,18,19,18,19,18,19,9,19,9,19,18,19,18,19,18,18,18,18,18,18,9,19,9,19,0,17,0,0,0,17,0,0,0,0,0,10,9,18,19,18,18,18,18,19,18,19,18,19,18,19],"f":"`````````{b{{d{b}}}}{{bb}b}0````{fh}0{{{l{j}}}n}11{{{l{A`c}}c}fAb}0{cf{Ad{Ah{Af}}}}{fb}```{{{l{A`Aj}}}h}{{{l{Al}}}{{`{{B`{bb}{{An{f}}}}}}}}0`````````````{{{l{c}}}{{l{e}}}{}{}}0{{{l{A`c}}}{{l{A`e}}}{}{}}0{{BbBbBb}Bb}{{{l{Bd}}}Bd}{{{l{{Bf{c}}}}}{{Bf{c}}}Bh}{{{l{A`{Bf{c}}}}{l{{Bf{c}}}}}hBh}{{{l{c}}{l{A`e}}}h{}{}}0{{{l{Bb}}{l{Bb}}}Bd}{{{l{Bd}}{l{Bd}}}Bd}{{{l{{Bf{c}}}}{l{{Bf{c}}}}}BdBb}{{}{{Bf{c}}}Bj}{{{l{Ad}}{l{c}}}fBl}{{{l{Bd}}{l{Bd}}}f}{{{l{{Bf{c}}}}{l{{Bf{c}}}}}fAd}{{{l{Bd}}{l{A`Bn}}}{{Cb{hC`}}}}{{{l{{Bf{c}}}}{l{A`Bn}}}{{Cb{hC`}}}Cd}{cc{}}0{{{l{Ab}}{l{c}}}fBl}{{{l{{Bf{c}}}}{l{{Bf{c}}}}}fAb}10{{{l{Bd}}{l{A`c}}}hCf}{{{l{{Bf{c}}}}{l{A`e}}}hChCf}{ce{}{}}0{Bdf}000005454{{cc}cBb}{{BbBb}Bb}{{cce}c{}{{Cj{{l{c}}{l{c}}}{{An{Bd}}}}}}{{ccg}c{}Bb{{Cl{{l{c}}}{{An{e}}}}}}3210{{cc}{{Cn{c}}}Bb}{{cce}{{Cn{c}}}{}{{Cj{{l{c}}{l{c}}}{{An{Bd}}}}}}{{ccg}{{Cn{c}}}{}Bb{{Cl{{l{c}}}{{An{e}}}}}}{{{l{Ad}}{l{c}}}fBl}{{{l{Ab}}{l{c}}}{{D`{Bd}}}Bl}{{{l{Bd}}{l{Bd}}}{{D`{Bd}}}}{{{l{{Bf{c}}}}{l{{Bf{c}}}}}{{D`{Bd}}}Ab}{BdBd}{{BdBd}Bd}{{Bdc}Bd{{Cj{}{{An{Bd}}}}}}{{{l{c}}}e{}{}}0{c{{Cb{e}}}{}{}}000{{{l{c}}}Db{}}0","D":"H`","p":[[1,"usize"],[5,"HashSet",109],[1,"bool"],[1,"unit"],[10,"OutFormatter",15],[1,"reference"],[5,"String",110],[0,"mut"],[10,"PartialOrd",31,111],[10,"PartialEq",31,111],[1,"u8"],[10,"From",112],[10,"Decrement",25],[10,"Comparator",25],[17,"Output"],[10,"Fn",113],[10,"Ord",31,111],[6,"Ordering",31,111],[5,"Reverse",31,111],[10,"Clone",114],[10,"Default",115],[10,"Sized",116],[5,"Formatter",117],[5,"Error",117],[6,"Result",118],[10,"Debug",117],[10,"Hasher",119],[10,"Hash",119],[10,"FnOnce",113],[10,"FnMut",113],[1,"array"],[6,"Option",120],[5,"TypeId",121]],"r":[[27,122],[31,111],[32,111],[36,111],[37,111],[38,111],[39,111],[40,111],[41,111],[42,111],[43,111],[83,111],[85,111],[86,111],[87,111],[89,111],[90,111],[91,111],[92,111],[93,111]],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAC0AEAADAAAABwACAA0AAwATAAAAGgABAB0AAgAtAAMAMgAEADgAAgA8AAMAQwAAAEUAAgBRAAAAUwAAAGEAAQBmAAcA","a":{"!=":[31,39],"<":[36,41],"<=":[36,41],"==":[31,39],">":[36,41],">=":[36,41]}}],\
["verify",{"t":"CCHH","n":["abc131_d","aoj_itp1_3_d","abc131_d","aoj_itp1_3_d"],"q":[[0,"verify"],[2,"verify::abc131_d"],[3,"verify::aoj_itp1_3_d"]],"i":[0,0,0,0],"f":"``{{}b}0","D":"f","p":[[1,"unit"]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OjAAAAEAAAAAAAEAEAAAAAMABAA="}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
